{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,QAEjCC,EAAW,GA+BjB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAtCPN,EAAQc,iBAAiB,SAGzB,SAAiBC,GACfZ,EAASY,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,K,IAHrClB,EAAQc,iBAAiB,UAMzB,SAAgBC,GACdA,EAAEI,iBAEF,IAAIC,EAAQC,OAAOlB,EAASG,OACxBgB,EAAOD,OAAOlB,EAASmB,MACvBC,EAASF,OAAOlB,EAASoB,QAE7B,GAAIH,GAAS,GAAKE,GAAQ,GAAKC,GAAU,EAEvC,YADAC,EAAA1B,GAAS2B,OAAOC,KAAK,6BAIrB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACvDvB,EAAcuB,EAAUP,GACvBQ,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBkB,EAAA1B,GAAS2B,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IACrE0B,OAAI,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBkB,EAAA1B,GAAS2B,OAAOQ,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IACnEc,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form')\n\nconst formData = {}\n\nformRef.addEventListener('input', getData)\nformRef.addEventListener('submit', turnOn)\n\nfunction getData(e) {\n  formData[e.target.name] = e.target.value;\n}\n\nfunction turnOn(e) {\n  e.preventDefault()\n\n  let delay = Number(formData.delay);\n  let step = Number(formData.step);\n  let amount = Number(formData.amount);\n\n  if (delay <= 0 || step <= 0 || amount <= 0) {\n    Notiflix.Notify.info('Enter a positive numbers.'); \n    return;\n  }\n\n    for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)})\n      delay += step;    \n  } \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","target","name","value","preventDefault","delay1","Number","step","amount","$parcel$interopDefault","Notify","info","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.055a11a6.js.map"}