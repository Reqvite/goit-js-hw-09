{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,QAwBvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACFN,EACTI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEfA,E,IA/BPL,EAAQa,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOjB,EAAQ,GAAGkB,OAC1BC,EAAOF,OAAOjB,EAAQ,GAAGkB,OACzBE,EAASH,OAAOjB,EAAQ,GAAGkB,QAEzBF,GAAS,GAAKG,GAAQ,GAAKC,GAAU,IACzCC,EAAAvB,GAASwB,OAAOC,KAAK,6BAGvB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACpDrB,EAAcqB,EAAUR,GACxBS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBgB,EAAAvB,GAASwB,OAAOK,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IACrEwB,OAAI,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBgB,EAAAvB,GAASwB,OAAOQ,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IACrEW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form')\n\nformRef.addEventListener('submit', onSubmit)\n\nfunction onSubmit(e) {\n  e.preventDefault()\n  let delay = Number(formRef[0].value);\n  let step = Number(formRef[1].value);\n  let amount = Number(formRef[2].value);\n\n    if (delay <= 0 || step <= 0 || amount <= 0) {\n    Notiflix.Notify.info('Enter a positive numbers.'); \n    }\n  \n  for (let position = 1; position <= amount; position += 1){\n     createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)})\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n         if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  }\n     },delay)\n   })\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","info","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.62d6e152.js.map"}